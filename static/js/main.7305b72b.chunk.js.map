{"version":3,"sources":["LoggedInContext.js","LoginHooks.js","utils/refreshToken.js","LogoutHooks.js","utils/cartUtils.js","CartContext.js","Cart.js","TopNav.js","ProductCard.js","Products.js","api/meijer.js","App.js","reportWebVitals.js","index.js"],"names":["LoggedInContext","React","createContext","LoggedInProvider","props","useState","loggedIn","setLoggedIn","Provider","value","children","LoginHooks","useContext","signIn","useGoogleLogin","onSuccess","res","console","log","profileObj","refreshTiming","tokenObj","expires_in","refreshToken","a","reloadAuthResponse","newAuthRes","localStorage","setItem","id_token","setTimeout","refreshTokenSetup","splice","onFailure","clientId","isSignedIn","accessType","onClick","className","src","alt","LogoutHooks","signOut","useGoogleLogout","onLogoutSuccess","sortCartByName","b","name","CartContext","CartProvider","cart","setCart","cartPlusMinusBtns","cartItem","updateCartPlus","updateCartMinus","updateCartRemove","cartStyle","btnIconClass","code","quantity","cartDynamic","map","index","Row","Col","price","parseFloat","replace","toFixed","Card","CardBody","image","cartCard","cartSummaryDynamic","length","CardTitle","cartTotalPrice","Button","handleCartClick","reduce","acc","curr","CartQuantity","cartTotalQuantity","CartTotal","document","querySelector","classList","toggle","handleSidebarToggle","Cart","cartContent","cartContentExpanded","fullWidthCart","match","find","e","filter","product","sort","add","Format","cartSummarySidebarCollapsed","cartSummarySidebarExpanded","TopNav","isOpen","setIsOpen","Navbar","color","dark","expand","NavbarBrand","href","NavbarToggler","Collapse","navbar","Nav","NavItem","NavLink","ProductCard","colWidth","CardImg","top","width","tag","currentState","remove","Products","products","deck","nextXProducts","i","slice","push","axios","create","baseURL","headers","App","state","onLoadStore","meijer","get","response","setState","data","this","Jumbotron","Container","fluid","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7305b72b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nexport const LoggedInContext = React.createContext();\r\n\r\nexport const LoggedInProvider = (props) => {\r\n  const [loggedIn, setLoggedIn] = useState([]);\r\n  return (\r\n    <LoggedInContext.Provider value={[loggedIn, setLoggedIn]}>\r\n      {props.children}\r\n    </LoggedInContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { useGoogleLogin } from \"react-google-login\";\r\n\r\n// refresh token\r\nimport { refreshTokenSetup } from \"./utils/refreshToken\";\r\nimport { LoggedInContext } from \"./LoggedInContext\";\r\n\r\nconst clientId =\r\n  //   '707788443358-u05p46nssla3l8tmn58tpo9r5sommgks.apps.googleusercontent.com';\r\n  \"1036837016251-dvqb16dmo47obs19s1cpoo2kai7qg04t.apps.googleusercontent.com\";\r\n\r\nfunction LoginHooks() {\r\n  const [loggedIn, setLoggedIn] = useContext(LoggedInContext);\r\n\r\n  const onSuccess = (res) => {\r\n    console.log(\"Login Success: currentUser:\", res.profileObj);\r\n    // alert(`Logged in successfully welcome ${res.profileObj.name} 😍. \\n `);\r\n    refreshTokenSetup(res);\r\n    // console.log(\"LoggedIn\", loggedIn);\r\n    setLoggedIn([res.profileObj].splice());\r\n  };\r\n\r\n  const onFailure = (res) => {\r\n    console.log(\"Login failed: res:\", res);\r\n    // alert(`Failed to login. 😢 `);\r\n  };\r\n\r\n  const { signIn } = useGoogleLogin({\r\n    onSuccess,\r\n    onFailure,\r\n    clientId,\r\n    isSignedIn: true,\r\n    accessType: \"offline\",\r\n    // responseType: 'code',\r\n    // prompt: 'consent',\r\n  });\r\n\r\n  return (\r\n    <button onClick={signIn} className=\"button\">\r\n      <img src=\"icons/google.svg\" alt=\"google login\" className=\"icon\"></img>\r\n\r\n      <span className=\"buttonText\">Sign in</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default LoginHooks;\r\n","export const refreshTokenSetup = (res) => {\r\n  // Timing to renew access token\r\n  let refreshTiming = (res.tokenObj.expires_in || 3600 - 5 * 60) * 1000;\r\n\r\n  const refreshToken = async () => {\r\n    const newAuthRes = await res.reloadAuthResponse();\r\n    refreshTiming = (newAuthRes.expires_in || 3600 - 5 * 60) * 1000;\r\n    console.log(\"newAuthRes:\", newAuthRes);\r\n    // saveUserToken(newAuthRes.access_token);  <-- save new token\r\n    localStorage.setItem(\"authToken\", newAuthRes.id_token);\r\n\r\n    // Setup the other timer after the first one\r\n    setTimeout(refreshToken, refreshTiming);\r\n  };\r\n\r\n  // Setup first refresh timer\r\n  setTimeout(refreshToken, refreshTiming);\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport { useGoogleLogout } from \"react-google-login\";\r\n\r\nimport { LoggedInContext } from \"./LoggedInContext\";\r\n\r\nconst clientId =\r\n  //   \"707788443358-u05p46nssla3l8tmn58tpo9r5sommgks.apps.googleusercontent.com\";\r\n  \"1036837016251-dvqb16dmo47obs19s1cpoo2kai7qg04t.apps.googleusercontent.com\";\r\n\r\nfunction LogoutHooks() {\r\n  const [loggedIn, setLoggedIn] = useContext(LoggedInContext);\r\n  const onLogoutSuccess = (res) => {\r\n    console.log(\"Logged out Success\");\r\n    // alert(\"Logged out Successfully ✌\");\r\n    setLoggedIn([false].splice());\r\n  };\r\n\r\n  const onFailure = () => {\r\n    console.log(\"Handle failure cases\");\r\n  };\r\n\r\n  const { signOut } = useGoogleLogout({\r\n    clientId,\r\n    onLogoutSuccess,\r\n    onFailure,\r\n  });\r\n\r\n  return (\r\n    <button onClick={signOut} className=\"button\">\r\n      <img src=\"icons/google.svg\" alt=\"google login\" className=\"icon\"></img>\r\n\r\n      <span className=\"buttonText\">Sign out</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default LogoutHooks;\r\n","\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardTitle,\r\n  //   CardText,\r\n  // CardDeck,\r\n  // CardSubtitle,\r\n  CardBody,\r\n  Button,\r\n} from \"reactstrap\";\r\n// import {cartCardCollapsed} from '../templates/cart-templates';\r\nconst cartCardCollapsed = `\r\n  <Card className=\"sidebar-cards\" key='%%CODE%%'>\r\n    <CardBody>\r\n      <Row>\r\n        <Col>\r\n                <img\r\n                    src='%%IMAGE%%'\r\n                    alt='%%NAME%%' className='cart-img'/>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n        <Col className=\"text-center\">\r\n                %%PLUSMINUS%%\r\n                <div class=\"small btn-remove\">Remove</div>\r\n            \r\n        </Col>\r\n    </Row>\r\n  </CardBody>\r\n</Card>`;\r\n\r\nexport const sortCartByName = (a, b) => {\r\n  if (a.name < b.name) {\r\n    return -1;\r\n  } else if (a.name > b.name) {\r\n    return 1;\r\n  } else return 0;\r\n};\r\n\r\nexport const showCollapsedCart = () => {\r\n  \r\n  document.querySelector(\".cart-sidebar-collapsed\").classList.remove(\"d-none\");\r\n};\r\n\r\n","import React, { useState } from \"react\";\r\n\r\nexport const CartContext = React.createContext();\r\n\r\nexport const CartProvider = (props) => {\r\n  const [cart, setCart] = useState([]);\r\n  return (\r\n    <CartContext.Provider value={[cart, setCart]}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Card,\r\n  CardTitle,\r\n  //   CardText,\r\n  // CardDeck,\r\n  // CardSubtitle,\r\n  CardBody,\r\n  Button,\r\n} from \"reactstrap\";\r\nimport {  sortCartByName } from \"./utils/cartUtils\";\r\n\r\nimport { CartContext } from \"./CartContext\";\r\n// import Paypal from \"./Paypal\";\r\nconst cartPlusMinusBtns = (\r\n  cartItem,\r\n  updateCartPlus,\r\n  updateCartMinus,\r\n  updateCartRemove,\r\n  cartStyle='COLLAPSED'\r\n) => {\r\n  let btnIconClass = \"btn-icon-sm\";\r\n  if (cartStyle !== 'COLLAPSED') {\r\n    btnIconClass = \"btn-icon\";\r\n  }\r\n  return (\r\n    <span>\r\n      <span>\r\n      <i\r\n        className={`fa fa-plus ${btnIconClass}`}\r\n        onClick={() => updateCartPlus(cartItem.code)}\r\n      ></i>\r\n      <span className=\"px-1 pb-1 border-bottom\">{cartItem.quantity}</span>\r\n      <i\r\n        className={`fa fa-minus ${btnIconClass}`}\r\n        onClick={() => updateCartMinus(cartItem.code)}\r\n      ></i>\r\n    </span>\r\n    <div\r\n            className=\"small btn-remove\"  \r\n            onClick={() => updateCartRemove(cartItem.code)}\r\n          >\r\n            Remove\r\n          </div>\r\n    </span>\r\n    \r\n  );\r\n};\r\n\r\nexport const cartCard=(cartItem,\r\n  updateCartPlus,\r\n  updateCartMinus,\r\n  updateCartRemove,\r\n  cartStyle='COLLAPSED')=>{\r\n  switch (cartStyle){\r\n    case 'FULLWIDTH':\r\n        return(\r\n          <Row key={'FULLWIDTH' + cartItem.code}>\r\n          <Col>{cartItem.name}</Col>\r\n          <Col>{cartItem.price}</Col>\r\n          <Col>\r\n            {\" \"}\r\n            {cartPlusMinusBtns(\r\n              cartItem,\r\n              updateCartPlus,\r\n              updateCartMinus,\r\n              updateCartRemove,\r\n              'COLLAPSED'\r\n            )}\r\n          </Col>\r\n          <Col>\r\n            {(\r\n              parseFloat(cartItem.price.replace(\"$\", \"\")) *\r\n              cartItem.quantity\r\n            ).toFixed(2)}\r\n          </Col>\r\n        </Row>\r\n        )\r\n    case 'EXPANDED':\r\n      return (\r\n        <Card className=\"sidebar-cards\" key={cartItem.code}>\r\n          <CardBody>\r\n            <Row>\r\n              <Col>\r\n                <img\r\n                    src={cartItem.image}\r\n                    alt={cartItem.image} className='cart-img'/>\r\n              </Col>\r\n              <Col>\r\n                <div>\r\n                  {(\r\n                    parseFloat(cartItem.price.replace(\"$\", \"\")) *\r\n                    cartItem.quantity\r\n                  ).toFixed(2)}\r\n                </div>\r\n                <div>{cartItem.name}</div>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col className=\"text-center\">\r\n                { cartPlusMinusBtns(cartItem,\r\n                    updateCartPlus,\r\n                    updateCartMinus,\r\n                    updateCartRemove,\r\n                    cartStyle)}\r\n              </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>)\r\n    case 'COLLAPSED':\r\n    default:\r\n      return (\r\n      <Card className=\"sidebar-cards\" key={cartItem.code}>\r\n        <CardBody>\r\n          <Row>\r\n            <Col>\r\n              <img\r\n                  src={cartItem.image}\r\n                  alt={cartItem.image} className='cart-img'/>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col className=\"text-center\">\r\n              { cartPlusMinusBtns(cartItem,\r\n                  updateCartPlus,\r\n                  updateCartMinus,\r\n                  updateCartRemove,\r\n                  cartStyle)}\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>)\r\n  }\r\n  \r\n\r\n}\r\n\r\n\r\nconst cartDynamic=(cart,\r\n  updateCartPlus,\r\n  updateCartMinus,\r\n  updateCartRemove,\r\n  cartStyle)=>{\r\n\r\n  return  cart.map((cartItem, index) => {\r\n    return cartCard(cartItem,\r\n      updateCartPlus,\r\n      updateCartMinus,\r\n      updateCartRemove,\r\n      cartStyle);\r\n    \r\n  });\r\n  \r\n}\r\nconst cartSummaryDynamic = (cart, cartStyle)=>{\r\n  if(cart.length > 0){\r\n    switch(cartStyle){\r\n      \r\n      case 'EXPANDED':\r\n        return (\r\n        <div className='cart-sidebar-summary'>\r\n          <Card>\r\n            <CardBody>\r\n              <CardTitle>\r\n                Estimated subtotal: ${cartTotalPrice(cart).toFixed(2)}\r\n              </CardTitle>\r\n              <Button\r\n                className=\"mt-2 btn btn-prime pill w-100\"\r\n                onClick={() => console.log(\"Checkout\")}\r\n              >\r\n                View Cart\r\n              </Button>\r\n            </CardBody>\r\n          </Card>\r\n        </div>)\r\n      case 'COLLAPSED':\r\n        default:\r\n          return (\r\n            <div className=\"cart-sidebar-summary\">\r\n        <Card>\r\n          <div className=\" d-flex flex-column align-items-center justify-content-center py-2\">\r\n            <i\r\n              className=\"fa fa-shopping-cart\"\r\n              onClick={() => handleCartClick()}\r\n            ></i>\r\n  \r\n            <div>\r\n              <CartQuantity />\r\n            </div>\r\n            <div>\r\n              <CartTotal />\r\n            </div>\r\n          </div>\r\n        </Card>\r\n      </div>\r\n          )\r\n    }\r\n  \r\n  }\r\n}\r\n\r\nconst cartTotalPrice = (cart) => {\r\n  return cart.reduce(\r\n    (acc, curr) =>\r\n      acc + parseFloat(curr.price.replace(\"$\", \"\") * curr.quantity),\r\n    0\r\n  );\r\n};\r\nconst cartTotalQuantity = (cart) => {\r\n  return cart.reduce((acc, curr) => acc + curr.quantity, 0);\r\n};\r\nexport const CartQuantity = () => {\r\n  const [cart] = useContext(CartContext);\r\n\r\n  return cartTotalQuantity(cart);\r\n};\r\nexport const CartTotal = () => {\r\n  const [cart] = useContext(CartContext);\r\n\r\n  return <span>${cartTotalPrice(cart).toFixed(2)}</span>;\r\n};\r\n\r\n// export const CartSummary = () => {\r\n//   const [cart] = useContext(CartContext);\r\n//   const totalPrice = cartTotalPrice(cart);\r\n//   const totalQuantity = cartTotalQuantity(cart);\r\n\r\n//   return (\r\n//     <Card className=\"mb-4\">\r\n//       <CardBody>\r\n//         <Row>\r\n//           <Col>\r\n//             <CardTitle tag=\"h5\">Cart Summary</CardTitle>\r\n//           </Col>\r\n//           <Col className=\"text-center\">\r\n//             <h6>items in cart: {totalQuantity}</h6>\r\n//           </Col>\r\n//           <Col className=\"text-center\">\r\n//             <h6>total price: {totalPrice.toFixed(2)}</h6>\r\n//           </Col>\r\n//         </Row>\r\n//       </CardBody>\r\n//     </Card>\r\n//   );\r\n// };\r\nexport const handleCartClick = () => {\r\n  document.querySelector(\".cart-fullwidth\").classList.toggle(\"d-none\");\r\n  document.querySelector(\".shop\").classList.toggle(\"d-none\");\r\n};\r\nconst handleSidebarToggle = () => {\r\n  document.querySelector(\".cart-sidebar-expanded\").classList.toggle(\"d-none\");\r\n  document.querySelector(\".cart-sidebar-collapsed\").classList.toggle(\"d-none\");\r\n};\r\nconst hideCart = () => {\r\n  document.querySelector(\".cart-sidebar-expanded\").classList.add(\"d-none\");\r\n  document.querySelector(\".cart-sidebar-collapsed\").classList.add(\"d-none\");\r\n};\r\n\r\nexport const Cart = (props) => {\r\n  const [cart, setCart] = useContext(CartContext);\r\n\r\n  const updateCartPlus = (props) => {\r\n    let match = cart.find((e) => e.code === props);\r\n\r\n    match.quantity++;\r\n\r\n    setCart(\r\n      [\r\n        ...cart.filter((product) => product.code !== props),\r\n        match,\r\n      ].sort((a, b) => sortCartByName(a, b))\r\n    );\r\n  };\r\n\r\n  const updateCartMinus = (props) => {\r\n    let match = cart.find((e) => e.code === props);\r\n\r\n    if (match.quantity > 0) {\r\n      match.quantity--;\r\n    }\r\n\r\n    setCart(\r\n      [\r\n        ...cart.filter((product) => product.code !== props),\r\n        match,\r\n      ].sort((a, b) => sortCartByName(a, b))\r\n    );\r\n  };\r\n\r\n  const updateCartRemove = (props) => {\r\n    setCart(cart.filter((product) => product.code !== props));\r\n    if (cart.length === 0) {\r\n      hideCart();\r\n    }\r\n  };\r\n\r\n  let cartContent;\r\n  let cartContentExpanded;\r\n  let fullWidthCart;\r\n  \r\n  if (props.Format === \"FULLWIDTH\") {\r\n    fullWidthCart = cartDynamic(\r\n      cart,\r\n      updateCartPlus,\r\n      updateCartMinus,\r\n      updateCartRemove,\r\n      'FULLWIDTH'\r\n    );\r\n    return (\r\n      <div className=\"cart-fullwidth d-none\">\r\n      <Card  >\r\n        <CardBody>\r\n          <CardTitle>\r\n            Shopping Cart\r\n          </CardTitle>\r\n          {fullWidthCart}\r\n          \r\n        </CardBody>\r\n      </Card>\r\n      </div>\r\n    )\r\n  } else if (props.Format === \"SIDEBAR\") {\r\n   \r\n    cartContent = cartDynamic(\r\n      cart,\r\n      updateCartPlus,\r\n      updateCartMinus,\r\n      updateCartRemove,\r\n      'COLLAPSED'\r\n    );\r\n    cartContentExpanded = cartDynamic(\r\n      cart,\r\n      updateCartPlus,\r\n      updateCartMinus,\r\n      updateCartRemove,\r\n      'EXPANDED'\r\n    );\r\n  \r\nconst cartSummarySidebarCollapsed = cartSummaryDynamic(cart, 'COLLAPSED');\r\nconst cartSummarySidebarExpanded = cartSummaryDynamic(cart, 'EXPANDED');\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <Card className=\"cart-sidebar-collapsed d-none\">\r\n        <CardBody>\r\n          <CardTitle>\r\n            <i\r\n              className=\"fa fa-angle-left btn-round ml-auto\"\r\n              onClick={() => handleSidebarToggle()}\r\n            ></i>\r\n          </CardTitle>\r\n          {cartContent}\r\n          {cartSummarySidebarCollapsed}\r\n        </CardBody>\r\n      </Card>\r\n      <Card className=\"cart-sidebar-expanded d-none\">\r\n        <CardBody>\r\n          <CardTitle>\r\n            <div className=\" d-flex align-items-center\">\r\n              Shopping Cart\r\n              <i\r\n                className=\"fa fa-times btn-round ml-auto\"\r\n                onClick={() => handleSidebarToggle()}\r\n              ></i>\r\n            </div>\r\n          </CardTitle>\r\n          {cartContentExpanded}\r\n          {cartSummarySidebarExpanded}\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n  }\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n} from \"reactstrap\";\r\nimport LoginHooks from \"./LoginHooks\";\r\nimport LogoutHooks from \"./LogoutHooks\";\r\n\r\nimport { CartQuantity, CartTotal, handleCartClick } from \"./Cart\";\r\n\r\nconst TopNav = (props) => {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n\r\n  const toggle = () => setIsOpen(!isOpen);\r\n\r\n  return (\r\n    <div className=\"nav-sticky\">\r\n      <Navbar color=\"secondary\" dark expand=\"md\">\r\n        <NavbarBrand href=\"/\">Meijer</NavbarBrand>\r\n        <NavbarToggler onClick={toggle} />\r\n        <Collapse isOpen={isOpen} navbar>\r\n          <Nav className=\"ml-auto\" navbar>\r\n            <NavItem>\r\n              <LoginHooks />\r\n              <LogoutHooks />\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink onClick={() => handleCartClick()}>\r\n                <i className=\"fa fa-shopping-cart\"></i>\r\n\r\n                <span className=\"px-2\">\r\n                  <CartQuantity />\r\n                </span>\r\n                <span>\r\n                  <CartTotal />\r\n                </span>\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n        </Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TopNav;\r\n","import React, { useContext } from \"react\";\r\nimport {\r\n  Col,\r\n  Card,\r\n  Button,\r\n  CardImg,\r\n  CardTitle,\r\n  // CardText,\r\n  // CardDeck,\r\n  // CardSubtitle,\r\n  CardBody,\r\n} from \"reactstrap\";\r\nimport { sortCartByName, showCollapsedCart } from \"./utils/cartUtils\";\r\nimport { CartContext } from \"./CartContext\";\r\n// import \"./ProductCard.css\";\r\n\r\nconst ProductCard = (props) => {\r\n  const [cart, setCart] = useContext(CartContext);\r\n\r\n  const addToCart = () => {\r\n    let match = cart.find((e) => e.code === props.product.code);\r\n\r\n    const product = {\r\n      code: props.product.code,\r\n      image: props.product.image,\r\n      name: props.product.name,\r\n      price: props.product.price,\r\n      quantity: match ? match.quantity + 1 : 1,\r\n    };\r\n    match\r\n      ? setCart(\r\n          [\r\n            ...cart.filter((product) => product.code !== match.code),\r\n            product,\r\n          ].sort((a, b) => sortCartByName(a, b))\r\n        )\r\n      : setCart((currentState) =>\r\n          [...currentState, product].sort((a, b) => sortCartByName(a, b))\r\n        );\r\n    if (cart.length === 0) {\r\n      showCollapsedCart();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Col className={props.colWidth} key={props.product.code}>\r\n      <Card className=\"pill\">\r\n        <CardImg\r\n          top\r\n          width=\"100%\"\r\n          src={props.product.image}\r\n          alt=\"Card image cap\"\r\n          className=\"pill\"\r\n        />\r\n        <CardBody className=\"text-center\">\r\n          <CardTitle tag=\"h5\">{props.product.name}</CardTitle>\r\n          <div>Price: {props.product.price}</div>\r\n          <div className=\"mb-3\">Code: {props.product.code}</div>\r\n          <Button className=\"w-100 pill btn-prime\" onClick={addToCart}>\r\n            Add to Cart\r\n          </Button>\r\n        </CardBody>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default ProductCard;\r\n","import { Row } from \"reactstrap\";\r\nimport ProductCard from \"./ProductCard\";\r\n\r\nconst productsInARow = 4;\r\nconst Products = (props) => {\r\n  let products = props.products;\r\n  let deck = [];\r\n  let nextXProducts = null;\r\n  let colWidth = `col-12 col-md-${12 / productsInARow}`;\r\n\r\n  for (let i = 0; i < products.length; i += productsInARow) {\r\n    nextXProducts = products.slice(i, i + productsInARow);\r\n    deck.push(\r\n      <Row className=\"mb-4\" key={i}>\r\n        {nextXProducts.map((product) => (\r\n          <ProductCard\r\n            product={product}\r\n            colWidth={colWidth}\r\n            key={product.code}\r\n          />\r\n        ))}\r\n      </Row>\r\n    );\r\n  }\r\n\r\n  return deck;\r\n};\r\nexport default Products;\r\n","import axios from \"axios\";\r\nexport default axios.create({\r\n  baseURL: \"https://meijerdigital.azurewebsites.net/api\",\r\n  headers: {\r\n    \"x-functions-key\":\r\n      \"VockV3fu1c7vBvaG7A4oMALa9WIrPekx8jeH5HeBzuxir2X6NcAE5w==\",\r\n  },\r\n});\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Jumbotron,\r\n  // Button,\r\n} from \"reactstrap\";\r\n\r\nimport TopNav from \"./TopNav\";\r\nimport Products from \"./Products\";\r\nimport meijer from \"./api/meijer\";\r\nimport { CartProvider } from \"./CartContext\";\r\nimport { Cart } from \"./Cart\";\r\n\r\nimport { LoggedInProvider } from \"./LoggedInContext\";\r\n\r\nclass App extends Component {\r\n  state = { products: [] };\r\n  onLoadStore = async () => {\r\n    const response = await meijer.get(`/products`, {});\r\n\r\n    this.setState({ products: response.data });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.onLoadStore();\r\n  }\r\n  render() {\r\n    return (\r\n      <LoggedInProvider>\r\n        <CartProvider>\r\n          <TopNav />\r\n          <Jumbotron className=\"position-relative\">\r\n            <Container fluid>\r\n              <Row>\r\n                <Col className=\"col-lg-11\">\r\n                  <div className=\"shop\">\r\n                    <Products products={this.state.products} />\r\n                  </div>\r\n                  \r\n                    <Cart Format=\"FULLWIDTH\"  />\r\n                  \r\n                </Col>\r\n              </Row>\r\n            </Container>\r\n          </Jumbotron>\r\n          <Cart Format=\"SIDEBAR\" />\r\n          \r\n        </CartProvider>\r\n      </LoggedInProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}